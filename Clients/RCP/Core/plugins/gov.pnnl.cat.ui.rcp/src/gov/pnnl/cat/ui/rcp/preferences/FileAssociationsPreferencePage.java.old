package gov.pnnl.cat.ui.rcp.preferences;

import java.util.ArrayList;
import java.util.HashMap;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.eclipse.core.runtime.Assert;
import org.eclipse.core.runtime.Platform;
import org.eclipse.core.runtime.content.IContentType;
import org.eclipse.jface.dialogs.MessageDialog;
import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.jface.preference.PreferencePage;
import org.eclipse.jface.window.Window;
import org.eclipse.osgi.util.NLS;
import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableItem;
import org.eclipse.ui.IEditorDescriptor;
import org.eclipse.ui.IFileEditorMapping;
import org.eclipse.ui.IWorkbench;
import org.eclipse.ui.IWorkbenchPreferencePage;
import org.eclipse.ui.dialogs.PreferenceLinkArea;
import org.eclipse.ui.internal.IWorkbenchHelpContextIds;
import org.eclipse.ui.internal.WorkbenchMessages;
import org.eclipse.ui.internal.WorkbenchPlugin;
import org.eclipse.ui.internal.registry.EditorDescriptor;
import org.eclipse.ui.internal.registry.EditorRegistry;
import org.eclipse.ui.internal.registry.FileEditorMapping;
import org.eclipse.ui.internal.util.PrefUtil;
import org.eclipse.ui.preferences.IWorkbenchPreferenceContainer;
import org.eclipse.ui.internal.dialogs.DialogUtil;
import org.eclipse.ui.internal.dialogs.FileEditorsPreferencePage;


public class FileAssociationsPreferencePage extends FileEditorsPreferencePage implements IWorkbenchPreferencePage {

  public FileAssociationsPreferencePage() {
    super();
  }
  
  /**
   * Creates the page's UI content.
   */
  protected Control createContents(Composite parent) {
      imagesToDispose = new ArrayList();
      editorsToImages = new HashMap(50);

      // define container & its gridding
      Composite pageComponent = new Composite(parent, SWT.NULL);
      GridLayout layout = new GridLayout();
      layout.numColumns = 2;
      layout.marginWidth = 0;
      layout.marginHeight = 0;
      pageComponent.setLayout(layout);
      GridData data = new GridData();
      data.verticalAlignment = GridData.FILL;
      data.horizontalAlignment = GridData.FILL;
      pageComponent.setLayoutData(data);

      //layout the contents

//      PreferenceLinkArea contentTypeArea = new PreferenceLinkArea(pageComponent, SWT.NONE,
//              "org.eclipse.ui.preferencePages.ContentTypes", WorkbenchMessages.FileEditorPreference_contentTypesRelatedLink,//$NON-NLS-1$
//              (IWorkbenchPreferenceContainer) getContainer(),null);
//      
//      data = new GridData(GridData.FILL_HORIZONTAL | GridData.GRAB_HORIZONTAL);
//      contentTypeArea.getControl().setLayoutData(data);

      //layout the top table & its buttons
      Label label = new Label(pageComponent, SWT.LEFT);
      label.setText(WorkbenchMessages.FileEditorPreference_fileTypes); 
      data = new GridData();
      data.horizontalAlignment = GridData.FILL;
      data.horizontalSpan = 2;
      label.setLayoutData(data);

      resourceTypeTable = new Table(pageComponent, SWT.SINGLE | SWT.BORDER
              | SWT.FULL_SELECTION);
      resourceTypeTable.addListener(SWT.Selection, this);
      resourceTypeTable.addListener(SWT.DefaultSelection, this);
      data = new GridData(GridData.FILL_HORIZONTAL);

      int availableRows = DialogUtil.availableRows(pageComponent);

      data.heightHint = resourceTypeTable.getItemHeight()
              * (availableRows / 8);
      resourceTypeTable.setLayoutData(data);

      Composite groupComponent = new Composite(pageComponent, SWT.NULL);
      GridLayout groupLayout = new GridLayout();
      groupLayout.marginWidth = 0;
      groupLayout.marginHeight = 0;
      groupComponent.setLayout(groupLayout);
      data = new GridData();
      data.verticalAlignment = GridData.FILL;
      data.horizontalAlignment = GridData.FILL;
      groupComponent.setLayoutData(data);

      addResourceTypeButton = new Button(groupComponent, SWT.PUSH);
      addResourceTypeButton.setText(WorkbenchMessages.FileEditorPreference_add); 
      addResourceTypeButton.addListener(SWT.Selection, this);
      addResourceTypeButton.setLayoutData(data);
      setButtonLayoutData(addResourceTypeButton);

      removeResourceTypeButton = new Button(groupComponent, SWT.PUSH);
      removeResourceTypeButton.setText(WorkbenchMessages.FileEditorPreference_remove);
      removeResourceTypeButton.addListener(SWT.Selection, this);
      setButtonLayoutData(removeResourceTypeButton);

      //Spacer
      label = new Label(pageComponent, SWT.LEFT);
      data = new GridData();
      data.horizontalAlignment = GridData.FILL;
      data.horizontalSpan = 2;
      label.setLayoutData(data);

      // layout the bottom table & its buttons
      editorLabel = new Label(pageComponent, SWT.LEFT);
      editorLabel.setText(WorkbenchMessages.FileEditorPreference_associatedEditors);
      data = new GridData();
      data.horizontalAlignment = GridData.FILL;
      data.horizontalSpan = 2;
      editorLabel.setLayoutData(data);

      editorTable = new Table(pageComponent, SWT.SINGLE | SWT.BORDER);
      editorTable.addListener(SWT.Selection, this);
      editorTable.addListener(SWT.DefaultSelection, this);
      data = new GridData(GridData.FILL_BOTH);
      data.heightHint = editorTable.getItemHeight() * 7;
      editorTable.setLayoutData(data);

      groupComponent = new Composite(pageComponent, SWT.NULL);
      groupLayout = new GridLayout();
      groupLayout.marginWidth = 0;
      groupLayout.marginHeight = 0;
      groupComponent.setLayout(groupLayout);
      data = new GridData();
      data.verticalAlignment = GridData.FILL;
      data.horizontalAlignment = GridData.FILL;
      groupComponent.setLayoutData(data);

      addEditorButton = new Button(groupComponent, SWT.PUSH);
      addEditorButton.setText(WorkbenchMessages.FileEditorPreference_addEditor);
      addEditorButton.addListener(SWT.Selection, this);
      addEditorButton.setLayoutData(data);
      setButtonLayoutData(addEditorButton);

      removeEditorButton = new Button(groupComponent, SWT.PUSH);
      removeEditorButton.setText(WorkbenchMessages.FileEditorPreference_removeEditor); 
      removeEditorButton.addListener(SWT.Selection, this);
      setButtonLayoutData(removeEditorButton);

      defaultEditorButton = new Button(groupComponent, SWT.PUSH);
      defaultEditorButton.setText(WorkbenchMessages.FileEditorPreference_default);
      defaultEditorButton.addListener(SWT.Selection, this);
      setButtonLayoutData(defaultEditorButton);

      fillResourceTypeTable();
      if (resourceTypeTable.getItemCount() > 0) {
          resourceTypeTable.setSelection(0);
      }
      fillEditorTable();
      updateEnabledState();

      workbench.getHelpSystem().setHelp(parent,
      IWorkbenchHelpContextIds.FILE_EDITORS_PREFERENCE_PAGE);
      applyDialogFont(pageComponent);

      return pageComponent;
  }

}
